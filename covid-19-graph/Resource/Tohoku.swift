//
//  Tohoku.swift
//  ProjectName
//
//  Created by AuthorName on 2020/08/08.
//  Copyright Â© 2020 CompanyName. All rights reserved.
//
//  Generated by PaintCode
//  http://www.paintcodeapp.com
//
//  This code was generated by Trial version of PaintCode, therefore cannot be used for commercial purposes.
//

import UIKit

public class Tohoku: NSObject {
    //// Drawing Methods
    
    @objc public dynamic class func drawCanvas1(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 185, height: 235), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 185, height: 235), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 185, y: resizedFrame.height / 235)
        
        //// Color Declarations
        let strokeColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000)
        
        //// A Blank Map of Japan Group
        //// FUKUSHIMA Drawing
        let fUKUSHIMAPath = UIBezierPath()
        fUKUSHIMAPath.move(to: CGPoint(x: 51.8, y: 193.14))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 51.13, y: 191.2))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 51.86, y: 188.78))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 50.83, y: 187.2))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 50.16, y: 187.5))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 49.25, y: 186.29))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 51.07, y: 182.59))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 51.07, y: 180.84))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 50.34, y: 180.47))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 50.71, y: 178.9))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 55.8, y: 178.47))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 56.71, y: 176.35))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 60.65, y: 176.9))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 61.19, y: 175.99))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 60.16, y: 173.38))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 60.23, y: 171.62))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 61.92, y: 170.59))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 63.26, y: 167.98))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 65.56, y: 165.56))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 66.59, y: 165.26))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 67.56, y: 166.17))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 69.2, y: 165.56))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 71.2, y: 165.74))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 71.98, y: 166.17))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 72.59, y: 167.74))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 74.47, y: 167.14))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 76.53, y: 168.77))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 77.62, y: 167.86))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 79.5, y: 168.29))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 81.38, y: 166.17))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 80.59, y: 165.2))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 80.84, y: 160.35))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 82.78, y: 161.07))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 84.53, y: 160.16))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 86.41, y: 161.26))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 86.72, y: 162.89))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 89.99, y: 162.47))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 92.66, y: 163.38))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 92.66, y: 166.11))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 94.78, y: 166.77))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 97.39, y: 166.41))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 97.51, y: 163.13))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 99.45, y: 163.26))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 100.3, y: 165.26))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 100.98, y: 165.39))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 101.16, y: 167.12))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 101.75, y: 168.44))
        fUKUSHIMAPath.addCurve(to: CGPoint(x: 101.8, y: 185.85), controlPoint1: CGPoint(x: 101.75, y: 168.44), controlPoint2: CGPoint(x: 103.34, y: 181.9))
        fUKUSHIMAPath.addCurve(to: CGPoint(x: 101.48, y: 190.63), controlPoint1: CGPoint(x: 101.8, y: 185.85), controlPoint2: CGPoint(x: 101.25, y: 189.99))
        fUKUSHIMAPath.addCurve(to: CGPoint(x: 100.89, y: 194.54), controlPoint1: CGPoint(x: 101.48, y: 190.63), controlPoint2: CGPoint(x: 100.25, y: 192.67))
        fUKUSHIMAPath.addCurve(to: CGPoint(x: 99.21, y: 196.81), controlPoint1: CGPoint(x: 100.89, y: 194.54), controlPoint2: CGPoint(x: 100.07, y: 196.27))
        fUKUSHIMAPath.addCurve(to: CGPoint(x: 95.84, y: 198.31), controlPoint1: CGPoint(x: 99.21, y: 196.81), controlPoint2: CGPoint(x: 96.61, y: 197.08))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 95.61, y: 198.81))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 95.51, y: 199.45))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 90.84, y: 198.05))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 89.69, y: 196.66))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 89.08, y: 197.27))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 89.81, y: 199.21))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 88.23, y: 199.57))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 86.35, y: 201.63))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 83.62, y: 200.3))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 83.56, y: 198.72))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 82.29, y: 198.36))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 81.44, y: 197.02))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 80.35, y: 196.9))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 80.17, y: 193.75))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 78.53, y: 193.2))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 76.84, y: 190.72))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 72.89, y: 189.39))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 69.2, y: 189.45))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 66.83, y: 191.32))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 61.62, y: 194.05))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 57.74, y: 195.81))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 55.74, y: 197.69))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 52.34, y: 196.72))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 51.31, y: 196.96))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 51.37, y: 196.3))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 51.8, y: 193.14))
        fUKUSHIMAPath.close()
        fUKUSHIMAPath.move(to: CGPoint(x: 76.38, y: 175.99))
        fUKUSHIMAPath.addCurve(to: CGPoint(x: 73.56, y: 176.81), controlPoint1: CGPoint(x: 76.38, y: 175.99), controlPoint2: CGPoint(x: 74.29, y: 175.81))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 74.97, y: 179.53))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 76.56, y: 179.99))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 77.47, y: 178.81))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 77.43, y: 177.35))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 76.29, y: 176.9))
        fUKUSHIMAPath.addLine(to: CGPoint(x: 76.38, y: 175.99))
        fUKUSHIMAPath.close()
        strokeColor.setStroke()
        fUKUSHIMAPath.lineWidth = 0.5
        fUKUSHIMAPath.miterLimit = 4
        fUKUSHIMAPath.stroke()
        
        //// MIYAGI Drawing
        let mIYAGIPath = UIBezierPath()
        mIYAGIPath.move(to: CGPoint(x: 120.67, y: 129.06))
        mIYAGIPath.addLine(to: CGPoint(x: 119.39, y: 128.06))
        mIYAGIPath.addLine(to: CGPoint(x: 119.76, y: 129.61))
        mIYAGIPath.addCurve(to: CGPoint(x: 119.26, y: 129.93), controlPoint1: CGPoint(x: 119.76, y: 129.61), controlPoint2: CGPoint(x: 119.44, y: 130.06))
        mIYAGIPath.addCurve(to: CGPoint(x: 118.26, y: 128.11), controlPoint1: CGPoint(x: 119.07, y: 129.79), controlPoint2: CGPoint(x: 118.26, y: 128.11))
        mIYAGIPath.addCurve(to: CGPoint(x: 118.44, y: 130.2), controlPoint1: CGPoint(x: 117.85, y: 129.29), controlPoint2: CGPoint(x: 118.39, y: 130.2))
        mIYAGIPath.addCurve(to: CGPoint(x: 117.76, y: 130.7), controlPoint1: CGPoint(x: 118.48, y: 130.2), controlPoint2: CGPoint(x: 117.76, y: 130.7))
        mIYAGIPath.addCurve(to: CGPoint(x: 117.48, y: 133.34), controlPoint1: CGPoint(x: 114.66, y: 131.79), controlPoint2: CGPoint(x: 117.48, y: 133.34))
        mIYAGIPath.addLine(to: CGPoint(x: 117.44, y: 134.29))
        mIYAGIPath.addLine(to: CGPoint(x: 116.62, y: 134.34))
        mIYAGIPath.addCurve(to: CGPoint(x: 114.21, y: 135.66), controlPoint1: CGPoint(x: 116.12, y: 135.66), controlPoint2: CGPoint(x: 114.21, y: 135.66))
        mIYAGIPath.addLine(to: CGPoint(x: 114.21, y: 136.57))
        mIYAGIPath.addCurve(to: CGPoint(x: 116.53, y: 136.88), controlPoint1: CGPoint(x: 114.21, y: 136.57), controlPoint2: CGPoint(x: 116.53, y: 136.93))
        mIYAGIPath.addCurve(to: CGPoint(x: 116.48, y: 137.75), controlPoint1: CGPoint(x: 116.53, y: 136.84), controlPoint2: CGPoint(x: 116.48, y: 137.75))
        mIYAGIPath.addLine(to: CGPoint(x: 114.62, y: 139.2))
        mIYAGIPath.addLine(to: CGPoint(x: 115.48, y: 140.48))
        mIYAGIPath.addLine(to: CGPoint(x: 116.39, y: 140.07))
        mIYAGIPath.addCurve(to: CGPoint(x: 116.62, y: 142.16), controlPoint1: CGPoint(x: 117.03, y: 140.34), controlPoint2: CGPoint(x: 116.62, y: 142.16))
        mIYAGIPath.addLine(to: CGPoint(x: 115.89, y: 141.2))
        mIYAGIPath.addLine(to: CGPoint(x: 115.26, y: 141.43))
        mIYAGIPath.addCurve(to: CGPoint(x: 115.12, y: 143.02), controlPoint1: CGPoint(x: 115.89, y: 141.7), controlPoint2: CGPoint(x: 115.12, y: 143.02))
        mIYAGIPath.addLine(to: CGPoint(x: 116.48, y: 143.2))
        mIYAGIPath.addLine(to: CGPoint(x: 116.44, y: 143.8))
        mIYAGIPath.addLine(to: CGPoint(x: 114.53, y: 143.89))
        mIYAGIPath.addLine(to: CGPoint(x: 114.98, y: 145.3))
        mIYAGIPath.addLine(to: CGPoint(x: 115.89, y: 144.75))
        mIYAGIPath.addCurve(to: CGPoint(x: 116.71, y: 145.61), controlPoint1: CGPoint(x: 115.89, y: 144.75), controlPoint2: CGPoint(x: 117.94, y: 145.43))
        mIYAGIPath.addCurve(to: CGPoint(x: 115.35, y: 146.39), controlPoint1: CGPoint(x: 115.48, y: 145.8), controlPoint2: CGPoint(x: 115.35, y: 146.39))
        mIYAGIPath.addCurve(to: CGPoint(x: 116.85, y: 148.25), controlPoint1: CGPoint(x: 116.62, y: 146.8), controlPoint2: CGPoint(x: 116.85, y: 148.25))
        mIYAGIPath.addLine(to: CGPoint(x: 116.39, y: 149.52))
        mIYAGIPath.addLine(to: CGPoint(x: 114.89, y: 148.43))
        mIYAGIPath.addLine(to: CGPoint(x: 114.62, y: 147.34))
        mIYAGIPath.addLine(to: CGPoint(x: 113.35, y: 147.12))
        mIYAGIPath.addLine(to: CGPoint(x: 114.12, y: 146.3))
        mIYAGIPath.addLine(to: CGPoint(x: 113.21, y: 145.43))
        mIYAGIPath.addLine(to: CGPoint(x: 111.89, y: 145.75))
        mIYAGIPath.addLine(to: CGPoint(x: 111.85, y: 144.89))
        mIYAGIPath.addCurve(to: CGPoint(x: 106.21, y: 146.48), controlPoint1: CGPoint(x: 107.75, y: 144.3), controlPoint2: CGPoint(x: 106.21, y: 146.48))
        mIYAGIPath.addLine(to: CGPoint(x: 105.89, y: 147.84))
        mIYAGIPath.addLine(to: CGPoint(x: 105.3, y: 146.66))
        mIYAGIPath.addCurve(to: CGPoint(x: 103.12, y: 146.8), controlPoint1: CGPoint(x: 104.75, y: 144.84), controlPoint2: CGPoint(x: 103.12, y: 146.8))
        mIYAGIPath.addCurve(to: CGPoint(x: 103.52, y: 147.89), controlPoint1: CGPoint(x: 101.61, y: 149.25), controlPoint2: CGPoint(x: 103.52, y: 147.89))
        mIYAGIPath.addLine(to: CGPoint(x: 103.89, y: 148.89))
        mIYAGIPath.addLine(to: CGPoint(x: 102.93, y: 149.43))
        mIYAGIPath.addCurve(to: CGPoint(x: 99.34, y: 162.48), controlPoint1: CGPoint(x: 98.02, y: 154.25), controlPoint2: CGPoint(x: 99.34, y: 162.48))
        mIYAGIPath.addLine(to: CGPoint(x: 99.45, y: 163.26))
        mIYAGIPath.addLine(to: CGPoint(x: 97.51, y: 163.13))
        mIYAGIPath.addLine(to: CGPoint(x: 97.39, y: 166.41))
        mIYAGIPath.addLine(to: CGPoint(x: 94.78, y: 166.77))
        mIYAGIPath.addLine(to: CGPoint(x: 92.66, y: 166.11))
        mIYAGIPath.addLine(to: CGPoint(x: 92.66, y: 163.38))
        mIYAGIPath.addLine(to: CGPoint(x: 89.99, y: 162.47))
        mIYAGIPath.addLine(to: CGPoint(x: 86.72, y: 162.89))
        mIYAGIPath.addLine(to: CGPoint(x: 86.41, y: 161.26))
        mIYAGIPath.addLine(to: CGPoint(x: 84.53, y: 160.16))
        mIYAGIPath.addLine(to: CGPoint(x: 82.78, y: 161.07))
        mIYAGIPath.addLine(to: CGPoint(x: 80.84, y: 160.35))
        mIYAGIPath.addLine(to: CGPoint(x: 80.96, y: 157.31))
        mIYAGIPath.addLine(to: CGPoint(x: 84.84, y: 156.59))
        mIYAGIPath.addLine(to: CGPoint(x: 86.6, y: 153.07))
        mIYAGIPath.addLine(to: CGPoint(x: 86.41, y: 149.92))
        mIYAGIPath.addLine(to: CGPoint(x: 87.87, y: 147.19))
        mIYAGIPath.addLine(to: CGPoint(x: 90.48, y: 143.37))
        mIYAGIPath.addLine(to: CGPoint(x: 88.6, y: 140.46))
        mIYAGIPath.addLine(to: CGPoint(x: 89.44, y: 139.37))
        mIYAGIPath.addLine(to: CGPoint(x: 88.29, y: 136.4))
        mIYAGIPath.addLine(to: CGPoint(x: 89.93, y: 136.88))
        mIYAGIPath.addLine(to: CGPoint(x: 90.54, y: 134.52))
        mIYAGIPath.addLine(to: CGPoint(x: 91.44, y: 132.1))
        mIYAGIPath.addLine(to: CGPoint(x: 90.17, y: 131.85))
        mIYAGIPath.addLine(to: CGPoint(x: 89.93, y: 130.22))
        mIYAGIPath.addLine(to: CGPoint(x: 88.72, y: 129.19))
        mIYAGIPath.addLine(to: CGPoint(x: 88.53, y: 128.46))
        mIYAGIPath.addLine(to: CGPoint(x: 89.93, y: 128.16))
        mIYAGIPath.addLine(to: CGPoint(x: 91.81, y: 127.97))
        mIYAGIPath.addLine(to: CGPoint(x: 93.51, y: 126.58))
        mIYAGIPath.addLine(to: CGPoint(x: 94.05, y: 125.55))
        mIYAGIPath.addLine(to: CGPoint(x: 94.96, y: 125.61))
        mIYAGIPath.addLine(to: CGPoint(x: 96.84, y: 125.43))
        mIYAGIPath.addLine(to: CGPoint(x: 98.3, y: 126.7))
        mIYAGIPath.addLine(to: CGPoint(x: 100.17, y: 127.37))
        mIYAGIPath.addLine(to: CGPoint(x: 101.21, y: 128.52))
        mIYAGIPath.addLine(to: CGPoint(x: 105.63, y: 128.46))
        mIYAGIPath.addLine(to: CGPoint(x: 105.63, y: 129.43))
        mIYAGIPath.addLine(to: CGPoint(x: 104.72, y: 130.22))
        mIYAGIPath.addLine(to: CGPoint(x: 107.51, y: 133.01))
        mIYAGIPath.addLine(to: CGPoint(x: 110.36, y: 130.46))
        mIYAGIPath.addLine(to: CGPoint(x: 113.57, y: 131.79))
        mIYAGIPath.addLine(to: CGPoint(x: 115.45, y: 127.55))
        mIYAGIPath.addLine(to: CGPoint(x: 115.27, y: 124.15))
        mIYAGIPath.addLine(to: CGPoint(x: 118.18, y: 124.46))
        mIYAGIPath.addLine(to: CGPoint(x: 119.33, y: 125.06))
        mIYAGIPath.addLine(to: CGPoint(x: 120.67, y: 129.06))
        mIYAGIPath.close()
        strokeColor.setStroke()
        mIYAGIPath.lineWidth = 0.5
        mIYAGIPath.miterLimit = 4
        mIYAGIPath.stroke()
        
        //// YAMAGATA Drawing
        let yAMAGATAPath = UIBezierPath()
        yAMAGATAPath.move(to: CGPoint(x: 60, y: 139.65))
        yAMAGATAPath.addLine(to: CGPoint(x: 61.92, y: 136.04))
        yAMAGATAPath.addLine(to: CGPoint(x: 62.19, y: 135.15))
        yAMAGATAPath.addLine(to: CGPoint(x: 62.81, y: 135.12))
        yAMAGATAPath.addCurve(to: CGPoint(x: 64.34, y: 133.86), controlPoint1: CGPoint(x: 62.81, y: 135.12), controlPoint2: CGPoint(x: 63.24, y: 134.09))
        yAMAGATAPath.addCurve(to: CGPoint(x: 65.39, y: 132.57), controlPoint1: CGPoint(x: 64.34, y: 133.86), controlPoint2: CGPoint(x: 64.5, y: 132.6))
        yAMAGATAPath.addCurve(to: CGPoint(x: 67.68, y: 126.19), controlPoint1: CGPoint(x: 65.39, y: 132.57), controlPoint2: CGPoint(x: 66.88, y: 130.78))
        yAMAGATAPath.addLine(to: CGPoint(x: 67.77, y: 125.46))
        yAMAGATAPath.addLine(to: CGPoint(x: 68.47, y: 124.93))
        yAMAGATAPath.addLine(to: CGPoint(x: 69.53, y: 120.76))
        yAMAGATAPath.addLine(to: CGPoint(x: 69.32, y: 119.97))
        yAMAGATAPath.addLine(to: CGPoint(x: 72.71, y: 120.27))
        yAMAGATAPath.addLine(to: CGPoint(x: 74.65, y: 119.37))
        yAMAGATAPath.addLine(to: CGPoint(x: 74.77, y: 120.88))
        yAMAGATAPath.addLine(to: CGPoint(x: 77.38, y: 122.28))
        yAMAGATAPath.addLine(to: CGPoint(x: 81.87, y: 123.43))
        yAMAGATAPath.addLine(to: CGPoint(x: 83.14, y: 123.18))
        yAMAGATAPath.addLine(to: CGPoint(x: 83.75, y: 124.28))
        yAMAGATAPath.addLine(to: CGPoint(x: 85.44, y: 124.52))
        yAMAGATAPath.addLine(to: CGPoint(x: 85.99, y: 126.58))
        yAMAGATAPath.addLine(to: CGPoint(x: 87.51, y: 127.73))
        yAMAGATAPath.addLine(to: CGPoint(x: 88.41, y: 127.67))
        yAMAGATAPath.addLine(to: CGPoint(x: 88.53, y: 128.46))
        yAMAGATAPath.addLine(to: CGPoint(x: 88.72, y: 129.19))
        yAMAGATAPath.addLine(to: CGPoint(x: 89.93, y: 130.22))
        yAMAGATAPath.addLine(to: CGPoint(x: 90.17, y: 131.85))
        yAMAGATAPath.addLine(to: CGPoint(x: 91.44, y: 132.1))
        yAMAGATAPath.addLine(to: CGPoint(x: 90.54, y: 134.52))
        yAMAGATAPath.addLine(to: CGPoint(x: 89.93, y: 136.88))
        yAMAGATAPath.addLine(to: CGPoint(x: 88.29, y: 136.4))
        yAMAGATAPath.addLine(to: CGPoint(x: 89.44, y: 139.37))
        yAMAGATAPath.addLine(to: CGPoint(x: 88.6, y: 140.46))
        yAMAGATAPath.addLine(to: CGPoint(x: 90.48, y: 143.37))
        yAMAGATAPath.addLine(to: CGPoint(x: 87.87, y: 147.19))
        yAMAGATAPath.addLine(to: CGPoint(x: 86.41, y: 149.92))
        yAMAGATAPath.addLine(to: CGPoint(x: 86.6, y: 153.07))
        yAMAGATAPath.addLine(to: CGPoint(x: 84.84, y: 156.59))
        yAMAGATAPath.addLine(to: CGPoint(x: 80.96, y: 157.31))
        yAMAGATAPath.addLine(to: CGPoint(x: 80.84, y: 160.35))
        yAMAGATAPath.addLine(to: CGPoint(x: 80.59, y: 165.2))
        yAMAGATAPath.addLine(to: CGPoint(x: 81.38, y: 166.17))
        yAMAGATAPath.addLine(to: CGPoint(x: 79.5, y: 168.29))
        yAMAGATAPath.addLine(to: CGPoint(x: 77.62, y: 167.86))
        yAMAGATAPath.addLine(to: CGPoint(x: 76.53, y: 168.77))
        yAMAGATAPath.addLine(to: CGPoint(x: 74.47, y: 167.14))
        yAMAGATAPath.addLine(to: CGPoint(x: 72.59, y: 167.74))
        yAMAGATAPath.addLine(to: CGPoint(x: 71.98, y: 166.17))
        yAMAGATAPath.addLine(to: CGPoint(x: 71.2, y: 165.74))
        yAMAGATAPath.addLine(to: CGPoint(x: 69.2, y: 165.56))
        yAMAGATAPath.addLine(to: CGPoint(x: 67.56, y: 166.17))
        yAMAGATAPath.addLine(to: CGPoint(x: 66.59, y: 165.26))
        yAMAGATAPath.addLine(to: CGPoint(x: 65.56, y: 165.56))
        yAMAGATAPath.addLine(to: CGPoint(x: 64.71, y: 164.59))
        yAMAGATAPath.addLine(to: CGPoint(x: 63.2, y: 163.98))
        yAMAGATAPath.addLine(to: CGPoint(x: 62.35, y: 162.35))
        yAMAGATAPath.addLine(to: CGPoint(x: 62.77, y: 161.56))
        yAMAGATAPath.addLine(to: CGPoint(x: 63.38, y: 158.1))
        yAMAGATAPath.addLine(to: CGPoint(x: 64.16, y: 157.44))
        yAMAGATAPath.addLine(to: CGPoint(x: 63.98, y: 153.56))
        yAMAGATAPath.addLine(to: CGPoint(x: 64.77, y: 152.04))
        yAMAGATAPath.addLine(to: CGPoint(x: 66.83, y: 152.53))
        yAMAGATAPath.addLine(to: CGPoint(x: 69.01, y: 151.19))
        yAMAGATAPath.addLine(to: CGPoint(x: 70.23, y: 149.31))
        yAMAGATAPath.addLine(to: CGPoint(x: 67.98, y: 146.77))
        yAMAGATAPath.addLine(to: CGPoint(x: 66.04, y: 146.77))
        yAMAGATAPath.addLine(to: CGPoint(x: 64.89, y: 145.55))
        yAMAGATAPath.addLine(to: CGPoint(x: 65.07, y: 141.92))
        yAMAGATAPath.addLine(to: CGPoint(x: 62.89, y: 141.31))
        yAMAGATAPath.addLine(to: CGPoint(x: 61.56, y: 140.83))
        yAMAGATAPath.addLine(to: CGPoint(x: 60.16, y: 140.04))
        yAMAGATAPath.addLine(to: CGPoint(x: 60, y: 139.65))
        yAMAGATAPath.close()
        strokeColor.setStroke()
        yAMAGATAPath.lineWidth = 0.5
        yAMAGATAPath.miterLimit = 4
        yAMAGATAPath.stroke()
        
        //// IWATE Drawing
        let iWATEPath = UIBezierPath()
        iWATEPath.move(to: CGPoint(x: 129.34, y: 112.39))
        iWATEPath.addCurve(to: CGPoint(x: 129.34, y: 113.12), controlPoint1: CGPoint(x: 129.27, y: 112.39), controlPoint2: CGPoint(x: 129.34, y: 113.12))
        iWATEPath.addLine(to: CGPoint(x: 126.79, y: 113.36))
        iWATEPath.addLine(to: CGPoint(x: 127.82, y: 114.03))
        iWATEPath.addLine(to: CGPoint(x: 127.7, y: 114.64))
        iWATEPath.addCurve(to: CGPoint(x: 126.79, y: 114.51), controlPoint1: CGPoint(x: 127.7, y: 114.64), controlPoint2: CGPoint(x: 126.79, y: 114.45))
        iWATEPath.addCurve(to: CGPoint(x: 126.91, y: 115.24), controlPoint1: CGPoint(x: 126.79, y: 114.57), controlPoint2: CGPoint(x: 126.91, y: 115.24))
        iWATEPath.addLine(to: CGPoint(x: 128.55, y: 115.36))
        iWATEPath.addLine(to: CGPoint(x: 128.61, y: 116.27))
        iWATEPath.addCurve(to: CGPoint(x: 126.24, y: 117), controlPoint1: CGPoint(x: 128.61, y: 116.27), controlPoint2: CGPoint(x: 126.24, y: 116.94))
        iWATEPath.addCurve(to: CGPoint(x: 126.24, y: 117.48), controlPoint1: CGPoint(x: 126.24, y: 117.06), controlPoint2: CGPoint(x: 126.24, y: 117.48))
        iWATEPath.addLine(to: CGPoint(x: 127.52, y: 117.67))
        iWATEPath.addCurve(to: CGPoint(x: 126.67, y: 118.64), controlPoint1: CGPoint(x: 127.52, y: 117.67), controlPoint2: CGPoint(x: 126.61, y: 118.58))
        iWATEPath.addCurve(to: CGPoint(x: 125.52, y: 118.76), controlPoint1: CGPoint(x: 126.73, y: 118.7), controlPoint2: CGPoint(x: 125.52, y: 118.76))
        iWATEPath.addLine(to: CGPoint(x: 127.21, y: 120.15))
        iWATEPath.addLine(to: CGPoint(x: 126.43, y: 121))
        iWATEPath.addCurve(to: CGPoint(x: 124.67, y: 120.09), controlPoint1: CGPoint(x: 126.43, y: 121), controlPoint2: CGPoint(x: 124.61, y: 120.09))
        iWATEPath.addCurve(to: CGPoint(x: 124.85, y: 121.43), controlPoint1: CGPoint(x: 124.73, y: 120.09), controlPoint2: CGPoint(x: 124.85, y: 121.43))
        iWATEPath.addLine(to: CGPoint(x: 126.36, y: 121.79))
        iWATEPath.addLine(to: CGPoint(x: 124.61, y: 122.21))
        iWATEPath.addLine(to: CGPoint(x: 125.7, y: 123.12))
        iWATEPath.addCurve(to: CGPoint(x: 122.91, y: 123.12), controlPoint1: CGPoint(x: 125.7, y: 123.12), controlPoint2: CGPoint(x: 122.97, y: 123.12))
        iWATEPath.addCurve(to: CGPoint(x: 122.54, y: 122.03), controlPoint1: CGPoint(x: 122.85, y: 123.12), controlPoint2: CGPoint(x: 122.54, y: 122.03))
        iWATEPath.addLine(to: CGPoint(x: 121.52, y: 123.12))
        iWATEPath.addLine(to: CGPoint(x: 122.61, y: 124.28))
        iWATEPath.addLine(to: CGPoint(x: 121.7, y: 124.88))
        iWATEPath.addLine(to: CGPoint(x: 122.18, y: 125.73))
        iWATEPath.addLine(to: CGPoint(x: 121.45, y: 126.28))
        iWATEPath.addLine(to: CGPoint(x: 120.48, y: 124.09))
        iWATEPath.addLine(to: CGPoint(x: 119.33, y: 123.91))
        iWATEPath.addLine(to: CGPoint(x: 119.33, y: 125.06))
        iWATEPath.addLine(to: CGPoint(x: 118.18, y: 124.46))
        iWATEPath.addLine(to: CGPoint(x: 115.27, y: 124.15))
        iWATEPath.addLine(to: CGPoint(x: 115.45, y: 127.55))
        iWATEPath.addLine(to: CGPoint(x: 113.57, y: 131.79))
        iWATEPath.addLine(to: CGPoint(x: 110.36, y: 130.46))
        iWATEPath.addLine(to: CGPoint(x: 107.51, y: 133.01))
        iWATEPath.addLine(to: CGPoint(x: 104.72, y: 130.22))
        iWATEPath.addLine(to: CGPoint(x: 105.63, y: 129.43))
        iWATEPath.addLine(to: CGPoint(x: 105.63, y: 128.46))
        iWATEPath.addLine(to: CGPoint(x: 101.21, y: 128.52))
        iWATEPath.addLine(to: CGPoint(x: 100.17, y: 127.37))
        iWATEPath.addLine(to: CGPoint(x: 98.3, y: 126.7))
        iWATEPath.addLine(to: CGPoint(x: 96.84, y: 125.43))
        iWATEPath.addLine(to: CGPoint(x: 94.96, y: 125.61))
        iWATEPath.addLine(to: CGPoint(x: 94.78, y: 124.15))
        iWATEPath.addLine(to: CGPoint(x: 95.75, y: 121.43))
        iWATEPath.addLine(to: CGPoint(x: 94.48, y: 121.24))
        iWATEPath.addLine(to: CGPoint(x: 94.54, y: 119.12))
        iWATEPath.addLine(to: CGPoint(x: 95.75, y: 117.67))
        iWATEPath.addLine(to: CGPoint(x: 95.02, y: 117.24))
        iWATEPath.addLine(to: CGPoint(x: 95.08, y: 115.85))
        iWATEPath.addLine(to: CGPoint(x: 93.33, y: 113.67))
        iWATEPath.addLine(to: CGPoint(x: 91.87, y: 110.03))
        iWATEPath.addLine(to: CGPoint(x: 94.05, y: 104.33))
        iWATEPath.addLine(to: CGPoint(x: 95.75, y: 102.51))
        iWATEPath.addLine(to: CGPoint(x: 96.3, y: 99.97))
        iWATEPath.addLine(to: CGPoint(x: 95.2, y: 98.39))
        iWATEPath.addLine(to: CGPoint(x: 97.08, y: 96.02))
        iWATEPath.addLine(to: CGPoint(x: 95.45, y: 95.05))
        iWATEPath.addLine(to: CGPoint(x: 95.57, y: 92.99))
        iWATEPath.addLine(to: CGPoint(x: 98.05, y: 93.42))
        iWATEPath.addLine(to: CGPoint(x: 97.26, y: 90.63))
        iWATEPath.addLine(to: CGPoint(x: 97.2, y: 86.33))
        iWATEPath.addLine(to: CGPoint(x: 98.05, y: 85.54))
        iWATEPath.addLine(to: CGPoint(x: 97.57, y: 82.75))
        iWATEPath.addLine(to: CGPoint(x: 99.81, y: 80.87))
        iWATEPath.addLine(to: CGPoint(x: 99.99, y: 80.14))
        iWATEPath.addLine(to: CGPoint(x: 100.72, y: 80.87))
        iWATEPath.addLine(to: CGPoint(x: 101.75, y: 81.29))
        iWATEPath.addLine(to: CGPoint(x: 104.6, y: 79.72))
        iWATEPath.addLine(to: CGPoint(x: 104.42, y: 79.05))
        iWATEPath.addLine(to: CGPoint(x: 107.57, y: 77.78))
        iWATEPath.addLine(to: CGPoint(x: 110.48, y: 75.84))
        iWATEPath.addLine(to: CGPoint(x: 111.63, y: 77.23))
        iWATEPath.addLine(to: CGPoint(x: 114.18, y: 75.59))
        iWATEPath.addLine(to: CGPoint(x: 116.6, y: 76.63))
        iWATEPath.addLine(to: CGPoint(x: 118.06, y: 75.53))
        iWATEPath.addLine(to: CGPoint(x: 118.24, y: 74.5))
        iWATEPath.addLine(to: CGPoint(x: 120.06, y: 73.84))
        iWATEPath.addLine(to: CGPoint(x: 120.85, y: 73.11))
        iWATEPath.addLine(to: CGPoint(x: 121.94, y: 74.41))
        iWATEPath.addCurve(to: CGPoint(x: 125.12, y: 81.05), controlPoint1: CGPoint(x: 121.94, y: 74.41), controlPoint2: CGPoint(x: 125.03, y: 79.78))
        iWATEPath.addCurve(to: CGPoint(x: 125.49, y: 82.6), controlPoint1: CGPoint(x: 125.12, y: 81.05), controlPoint2: CGPoint(x: 122.67, y: 82.69))
        iWATEPath.addLine(to: CGPoint(x: 126.39, y: 83.96))
        iWATEPath.addCurve(to: CGPoint(x: 126.12, y: 87.14), controlPoint1: CGPoint(x: 126.39, y: 83.96), controlPoint2: CGPoint(x: 123.21, y: 85.14))
        iWATEPath.addLine(to: CGPoint(x: 127.21, y: 88.42))
        iWATEPath.addLine(to: CGPoint(x: 128.12, y: 88.51))
        iWATEPath.addLine(to: CGPoint(x: 128.85, y: 90.87))
        iWATEPath.addCurve(to: CGPoint(x: 129.12, y: 93.24), controlPoint1: CGPoint(x: 128.85, y: 90.87), controlPoint2: CGPoint(x: 127.03, y: 90.69))
        iWATEPath.addCurve(to: CGPoint(x: 128.58, y: 103.33), controlPoint1: CGPoint(x: 129.12, y: 93.24), controlPoint2: CGPoint(x: 130.12, y: 97.15))
        iWATEPath.addLine(to: CGPoint(x: 130.58, y: 101.15))
        iWATEPath.addLine(to: CGPoint(x: 130.85, y: 103.78))
        iWATEPath.addCurve(to: CGPoint(x: 130.85, y: 105.42), controlPoint1: CGPoint(x: 130.85, y: 103.78), controlPoint2: CGPoint(x: 132.85, y: 104.6))
        iWATEPath.addCurve(to: CGPoint(x: 130.06, y: 107.06), controlPoint1: CGPoint(x: 130.85, y: 105.42), controlPoint2: CGPoint(x: 130.12, y: 107.18))
        iWATEPath.addCurve(to: CGPoint(x: 130.36, y: 107.73), controlPoint1: CGPoint(x: 127.58, y: 106.75), controlPoint2: CGPoint(x: 128.73, y: 110.03))
        iWATEPath.addCurve(to: CGPoint(x: 131.58, y: 107.85), controlPoint1: CGPoint(x: 130.36, y: 107.73), controlPoint2: CGPoint(x: 131.7, y: 106.45))
        iWATEPath.addCurve(to: CGPoint(x: 130.91, y: 109.42), controlPoint1: CGPoint(x: 131.58, y: 107.85), controlPoint2: CGPoint(x: 130.79, y: 108.45))
        iWATEPath.addLine(to: CGPoint(x: 129.27, y: 109.42))
        iWATEPath.addLine(to: CGPoint(x: 128.18, y: 110.76))
        iWATEPath.addLine(to: CGPoint(x: 129.03, y: 110.88))
        iWATEPath.addLine(to: CGPoint(x: 128.49, y: 111.73))
        iWATEPath.addCurve(to: CGPoint(x: 128.61, y: 112.33), controlPoint1: CGPoint(x: 127.77, y: 111.14), controlPoint2: CGPoint(x: 125.62, y: 112.88))
        iWATEPath.addCurve(to: CGPoint(x: 129.34, y: 112.39), controlPoint1: CGPoint(x: 128.61, y: 112.33), controlPoint2: CGPoint(x: 129.4, y: 112.39))
        iWATEPath.close()
        strokeColor.setStroke()
        iWATEPath.lineWidth = 0.5
        iWATEPath.miterLimit = 4
        iWATEPath.stroke()
        
        //// AKITA Drawing
        let aKITAPath = UIBezierPath()
        aKITAPath.move(to: CGPoint(x: 72.66, y: 85.61))
        aKITAPath.addCurve(to: CGPoint(x: 71.02, y: 87.99), controlPoint1: CGPoint(x: 72.66, y: 85.61), controlPoint2: CGPoint(x: 71.33, y: 87.8))
        aKITAPath.addLine(to: CGPoint(x: 70.76, y: 90.56))
        aKITAPath.addLine(to: CGPoint(x: 71.8, y: 91.86))
        aKITAPath.addCurve(to: CGPoint(x: 74.09, y: 93.03), controlPoint1: CGPoint(x: 71.8, y: 91.86), controlPoint2: CGPoint(x: 73.59, y: 92.28))
        aKITAPath.addCurve(to: CGPoint(x: 74.51, y: 91.15), controlPoint1: CGPoint(x: 74.09, y: 93.03), controlPoint2: CGPoint(x: 74.45, y: 91.5))
        aKITAPath.addLine(to: CGPoint(x: 74.98, y: 90.44))
        aKITAPath.addLine(to: CGPoint(x: 74.98, y: 86.94))
        aKITAPath.addLine(to: CGPoint(x: 72.66, y: 85.61))
        aKITAPath.close()
        aKITAPath.move(to: CGPoint(x: 72.72, y: 85.85))
        aKITAPath.addLine(to: CGPoint(x: 74.6, y: 87.24))
        aKITAPath.addLine(to: CGPoint(x: 74.6, y: 90.29))
        aKITAPath.addCurve(to: CGPoint(x: 73.01, y: 91.31), controlPoint1: CGPoint(x: 74.6, y: 90.29), controlPoint2: CGPoint(x: 73.65, y: 91.33))
        aKITAPath.addCurve(to: CGPoint(x: 71.44, y: 90.82), controlPoint1: CGPoint(x: 72.37, y: 91.28), controlPoint2: CGPoint(x: 71.44, y: 90.82))
        aKITAPath.addCurve(to: CGPoint(x: 71.24, y: 89.56), controlPoint1: CGPoint(x: 71.44, y: 90.82), controlPoint2: CGPoint(x: 70.96, y: 91.02))
        aKITAPath.addLine(to: CGPoint(x: 71.38, y: 88.04))
        aKITAPath.addLine(to: CGPoint(x: 72.72, y: 85.85))
        aKITAPath.close()
        aKITAPath.move(to: CGPoint(x: 88.41, y: 127.67))
        aKITAPath.addLine(to: CGPoint(x: 87.51, y: 127.73))
        aKITAPath.addLine(to: CGPoint(x: 85.99, y: 126.58))
        aKITAPath.addLine(to: CGPoint(x: 85.44, y: 124.52))
        aKITAPath.addLine(to: CGPoint(x: 83.75, y: 124.28))
        aKITAPath.addLine(to: CGPoint(x: 83.14, y: 123.18))
        aKITAPath.addLine(to: CGPoint(x: 81.87, y: 123.43))
        aKITAPath.addLine(to: CGPoint(x: 77.38, y: 122.28))
        aKITAPath.addLine(to: CGPoint(x: 74.77, y: 120.88))
        aKITAPath.addLine(to: CGPoint(x: 74.65, y: 119.37))
        aKITAPath.addLine(to: CGPoint(x: 72.71, y: 120.27))
        aKITAPath.addLine(to: CGPoint(x: 69.32, y: 119.97))
        aKITAPath.addLine(to: CGPoint(x: 69.79, y: 119.02))
        aKITAPath.addLine(to: CGPoint(x: 70.39, y: 117.86))
        aKITAPath.addLine(to: CGPoint(x: 70.43, y: 117.14))
        aKITAPath.addCurve(to: CGPoint(x: 69.98, y: 117.03), controlPoint1: CGPoint(x: 70.43, y: 117.14), controlPoint2: CGPoint(x: 70.02, y: 117.03))
        aKITAPath.addCurve(to: CGPoint(x: 70.02, y: 116.39), controlPoint1: CGPoint(x: 69.94, y: 117.03), controlPoint2: CGPoint(x: 70.02, y: 116.39))
        aKITAPath.addLine(to: CGPoint(x: 70.54, y: 115.9))
        aKITAPath.addLine(to: CGPoint(x: 70.58, y: 114.43))
        aKITAPath.addLine(to: CGPoint(x: 70.84, y: 114.01))
        aKITAPath.addLine(to: CGPoint(x: 71.86, y: 113.94))
        aKITAPath.addCurve(to: CGPoint(x: 74.69, y: 99.58), controlPoint1: CGPoint(x: 75.33, y: 107.95), controlPoint2: CGPoint(x: 74.69, y: 99.58))
        aKITAPath.addLine(to: CGPoint(x: 74.5, y: 98.08))
        aKITAPath.addLine(to: CGPoint(x: 74.08, y: 95.82))
        aKITAPath.addCurve(to: CGPoint(x: 69, y: 92.65), controlPoint1: CGPoint(x: 71.9, y: 91.56), controlPoint2: CGPoint(x: 69, y: 92.65))
        aKITAPath.addCurve(to: CGPoint(x: 68.81, y: 93.78), controlPoint1: CGPoint(x: 69, y: 92.65), controlPoint2: CGPoint(x: 68.81, y: 93.74))
        aKITAPath.addCurve(to: CGPoint(x: 67.64, y: 93.89), controlPoint1: CGPoint(x: 68.81, y: 93.82), controlPoint2: CGPoint(x: 67.64, y: 93.89))
        aKITAPath.addLine(to: CGPoint(x: 65.68, y: 93.71))
        aKITAPath.addLine(to: CGPoint(x: 65.46, y: 92.24))
        aKITAPath.addLine(to: CGPoint(x: 64.97, y: 92.31))
        aKITAPath.addLine(to: CGPoint(x: 64.59, y: 90.99))
        aKITAPath.addLine(to: CGPoint(x: 65.08, y: 90.65))
        aKITAPath.addLine(to: CGPoint(x: 64.55, y: 90.47))
        aKITAPath.addLine(to: CGPoint(x: 64.4, y: 88.58))
        aKITAPath.addLine(to: CGPoint(x: 65.19, y: 89.56))
        aKITAPath.addLine(to: CGPoint(x: 67, y: 90.39))
        aKITAPath.addLine(to: CGPoint(x: 68.28, y: 90.16))
        aKITAPath.addCurve(to: CGPoint(x: 72.58, y: 81.95), controlPoint1: CGPoint(x: 72.99, y: 85.95), controlPoint2: CGPoint(x: 72.58, y: 81.95))
        aKITAPath.addCurve(to: CGPoint(x: 73.56, y: 78.87), controlPoint1: CGPoint(x: 73.82, y: 79.69), controlPoint2: CGPoint(x: 73.56, y: 78.87))
        aKITAPath.addCurve(to: CGPoint(x: 72.47, y: 75.47), controlPoint1: CGPoint(x: 74.29, y: 75.11), controlPoint2: CGPoint(x: 72.47, y: 75.47))
        aKITAPath.addLine(to: CGPoint(x: 71.38, y: 73.78))
        aKITAPath.addLine(to: CGPoint(x: 73.44, y: 74.08))
        aKITAPath.addLine(to: CGPoint(x: 73.68, y: 72.87))
        aKITAPath.addLine(to: CGPoint(x: 75.56, y: 72.5))
        aKITAPath.addLine(to: CGPoint(x: 76.05, y: 73.53))
        aKITAPath.addLine(to: CGPoint(x: 82.66, y: 73.41))
        aKITAPath.addLine(to: CGPoint(x: 83.14, y: 72.08))
        aKITAPath.addLine(to: CGPoint(x: 85.32, y: 72.08))
        aKITAPath.addLine(to: CGPoint(x: 88.47, y: 73.9))
        aKITAPath.addLine(to: CGPoint(x: 91.02, y: 74.14))
        aKITAPath.addLine(to: CGPoint(x: 95.69, y: 73.05))
        aKITAPath.addLine(to: CGPoint(x: 96.05, y: 71.78))
        aKITAPath.addLine(to: CGPoint(x: 96.97, y: 71.06))
        aKITAPath.addLine(to: CGPoint(x: 97.96, y: 70.9))
        aKITAPath.addLine(to: CGPoint(x: 98.03, y: 71.43))
        aKITAPath.addLine(to: CGPoint(x: 96.89, y: 71.66))
        aKITAPath.addLine(to: CGPoint(x: 96.83, y: 72.53))
        aKITAPath.addLine(to: CGPoint(x: 97.06, y: 72.74))
        aKITAPath.addLine(to: CGPoint(x: 97.25, y: 73.78))
        aKITAPath.addLine(to: CGPoint(x: 97.74, y: 74.37))
        aKITAPath.addLine(to: CGPoint(x: 98.22, y: 73.95))
        aKITAPath.addLine(to: CGPoint(x: 101.02, y: 73.84))
        aKITAPath.addLine(to: CGPoint(x: 101.27, y: 76.56))
        aKITAPath.addLine(to: CGPoint(x: 100.48, y: 76.69))
        aKITAPath.addLine(to: CGPoint(x: 99.99, y: 80.14))
        aKITAPath.addLine(to: CGPoint(x: 99.81, y: 80.87))
        aKITAPath.addLine(to: CGPoint(x: 97.57, y: 82.75))
        aKITAPath.addLine(to: CGPoint(x: 98.05, y: 85.54))
        aKITAPath.addLine(to: CGPoint(x: 97.2, y: 86.33))
        aKITAPath.addLine(to: CGPoint(x: 97.26, y: 90.63))
        aKITAPath.addLine(to: CGPoint(x: 98.05, y: 93.42))
        aKITAPath.addLine(to: CGPoint(x: 95.57, y: 92.99))
        aKITAPath.addLine(to: CGPoint(x: 95.45, y: 95.05))
        aKITAPath.addLine(to: CGPoint(x: 97.08, y: 96.02))
        aKITAPath.addLine(to: CGPoint(x: 95.2, y: 98.39))
        aKITAPath.addLine(to: CGPoint(x: 96.3, y: 99.97))
        aKITAPath.addLine(to: CGPoint(x: 95.75, y: 102.51))
        aKITAPath.addLine(to: CGPoint(x: 94.05, y: 104.33))
        aKITAPath.addLine(to: CGPoint(x: 91.87, y: 110.03))
        aKITAPath.addLine(to: CGPoint(x: 93.33, y: 113.67))
        aKITAPath.addLine(to: CGPoint(x: 95.08, y: 115.85))
        aKITAPath.addLine(to: CGPoint(x: 95.02, y: 117.24))
        aKITAPath.addLine(to: CGPoint(x: 95.75, y: 117.67))
        aKITAPath.addLine(to: CGPoint(x: 94.54, y: 119.12))
        aKITAPath.addLine(to: CGPoint(x: 94.48, y: 121.24))
        aKITAPath.addLine(to: CGPoint(x: 95.75, y: 121.43))
        aKITAPath.addLine(to: CGPoint(x: 94.78, y: 124.15))
        aKITAPath.addLine(to: CGPoint(x: 94.96, y: 125.61))
        aKITAPath.addLine(to: CGPoint(x: 94.05, y: 125.55))
        aKITAPath.addLine(to: CGPoint(x: 93.51, y: 126.58))
        aKITAPath.addLine(to: CGPoint(x: 91.81, y: 127.97))
        aKITAPath.addLine(to: CGPoint(x: 89.93, y: 128.16))
        strokeColor.setStroke()
        aKITAPath.lineWidth = 0.5
        aKITAPath.miterLimit = 4
        aKITAPath.stroke()
        
        //// AOMORI Drawing
        let aOMORIPath = UIBezierPath()
        aOMORIPath.move(to: CGPoint(x: 71.44, y: 71.59))
        aOMORIPath.addCurve(to: CGPoint(x: 70.65, y: 68.32), controlPoint1: CGPoint(x: 71.44, y: 71.59), controlPoint2: CGPoint(x: 71.26, y: 69.47))
        aOMORIPath.addLine(to: CGPoint(x: 69.2, y: 68.26))
        aOMORIPath.addLine(to: CGPoint(x: 69.14, y: 67.17))
        aOMORIPath.addCurve(to: CGPoint(x: 72.96, y: 62.8), controlPoint1: CGPoint(x: 69.14, y: 67.17), controlPoint2: CGPoint(x: 72.17, y: 65.17))
        aOMORIPath.addLine(to: CGPoint(x: 74.71, y: 61.83))
        aOMORIPath.addLine(to: CGPoint(x: 76.05, y: 62.68))
        aOMORIPath.addCurve(to: CGPoint(x: 78.47, y: 61.11), controlPoint1: CGPoint(x: 76.05, y: 62.68), controlPoint2: CGPoint(x: 78.11, y: 62.38))
        aOMORIPath.addCurve(to: CGPoint(x: 80.84, y: 59.29), controlPoint1: CGPoint(x: 78.47, y: 61.11), controlPoint2: CGPoint(x: 79.69, y: 62.44))
        aOMORIPath.addCurve(to: CGPoint(x: 81.99, y: 50.44), controlPoint1: CGPoint(x: 80.84, y: 59.29), controlPoint2: CGPoint(x: 82.35, y: 53.65))
        aOMORIPath.addLine(to: CGPoint(x: 81.32, y: 49.53))
        aOMORIPath.addLine(to: CGPoint(x: 80.23, y: 49.47))
        aOMORIPath.addLine(to: CGPoint(x: 80.17, y: 48.68))
        aOMORIPath.addLine(to: CGPoint(x: 81.56, y: 48.98))
        aOMORIPath.addCurve(to: CGPoint(x: 82.41, y: 45.53), controlPoint1: CGPoint(x: 81.56, y: 48.98), controlPoint2: CGPoint(x: 83.02, y: 47.83))
        aOMORIPath.addLine(to: CGPoint(x: 82.78, y: 44.56))
        aOMORIPath.addLine(to: CGPoint(x: 84.23, y: 45.4))
        aOMORIPath.addCurve(to: CGPoint(x: 88.17, y: 45.65), controlPoint1: CGPoint(x: 84.23, y: 45.4), controlPoint2: CGPoint(x: 86.29, y: 49.22))
        aOMORIPath.addCurve(to: CGPoint(x: 91.26, y: 47.34), controlPoint1: CGPoint(x: 88.17, y: 45.65), controlPoint2: CGPoint(x: 89.81, y: 45.34))
        aOMORIPath.addCurve(to: CGPoint(x: 92.23, y: 57.47), controlPoint1: CGPoint(x: 91.26, y: 47.34), controlPoint2: CGPoint(x: 90.78, y: 53.59))
        aOMORIPath.addCurve(to: CGPoint(x: 97.63, y: 56.8), controlPoint1: CGPoint(x: 92.23, y: 57.47), controlPoint2: CGPoint(x: 94.42, y: 62.68))
        aOMORIPath.addLine(to: CGPoint(x: 97.2, y: 55.47))
        aOMORIPath.addLine(to: CGPoint(x: 97.99, y: 53.22))
        aOMORIPath.addLine(to: CGPoint(x: 100.9, y: 55.04))
        aOMORIPath.addLine(to: CGPoint(x: 100.96, y: 55.83))
        aOMORIPath.addLine(to: CGPoint(x: 101.81, y: 56.07))
        aOMORIPath.addLine(to: CGPoint(x: 103.08, y: 56.56))
        aOMORIPath.addCurve(to: CGPoint(x: 107.99, y: 54.07), controlPoint1: CGPoint(x: 103.08, y: 56.56), controlPoint2: CGPoint(x: 105.15, y: 61.65))
        aOMORIPath.addLine(to: CGPoint(x: 108.48, y: 49.83))
        aOMORIPath.addLine(to: CGPoint(x: 109.15, y: 48.92))
        aOMORIPath.addCurve(to: CGPoint(x: 106.84, y: 43.95), controlPoint1: CGPoint(x: 109.15, y: 48.92), controlPoint2: CGPoint(x: 109.75, y: 45.77))
        aOMORIPath.addCurve(to: CGPoint(x: 105.39, y: 45.22), controlPoint1: CGPoint(x: 106.84, y: 43.95), controlPoint2: CGPoint(x: 105.69, y: 43.4))
        aOMORIPath.addLine(to: CGPoint(x: 104.72, y: 46.07))
        aOMORIPath.addLine(to: CGPoint(x: 103.02, y: 47.1))
        aOMORIPath.addLine(to: CGPoint(x: 102.18, y: 47.28))
        aOMORIPath.addCurve(to: CGPoint(x: 99.99, y: 47.46), controlPoint1: CGPoint(x: 102.18, y: 47.28), controlPoint2: CGPoint(x: 101.33, y: 45.83))
        aOMORIPath.addCurve(to: CGPoint(x: 98.36, y: 47.95), controlPoint1: CGPoint(x: 99.99, y: 47.46), controlPoint2: CGPoint(x: 98.72, y: 47.4))
        aOMORIPath.addCurve(to: CGPoint(x: 96.17, y: 49.04), controlPoint1: CGPoint(x: 98.36, y: 47.95), controlPoint2: CGPoint(x: 96.78, y: 47.83))
        aOMORIPath.addCurve(to: CGPoint(x: 94.72, y: 47.28), controlPoint1: CGPoint(x: 96.17, y: 49.04), controlPoint2: CGPoint(x: 94.78, y: 49.89))
        aOMORIPath.addLine(to: CGPoint(x: 95.14, y: 46.25))
        aOMORIPath.addCurve(to: CGPoint(x: 96.78, y: 39.28), controlPoint1: CGPoint(x: 95.14, y: 46.25), controlPoint2: CGPoint(x: 96.54, y: 39.83))
        aOMORIPath.addLine(to: CGPoint(x: 98.84, y: 36.07))
        aOMORIPath.addLine(to: CGPoint(x: 98.48, y: 35.34))
        aOMORIPath.addLine(to: CGPoint(x: 99.02, y: 34.43))
        aOMORIPath.addCurve(to: CGPoint(x: 103.45, y: 36.61), controlPoint1: CGPoint(x: 99.02, y: 34.43), controlPoint2: CGPoint(x: 100.66, y: 36.98))
        aOMORIPath.addLine(to: CGPoint(x: 104.78, y: 37.4))
        aOMORIPath.addCurve(to: CGPoint(x: 114.6, y: 38.49), controlPoint1: CGPoint(x: 104.78, y: 37.4), controlPoint2: CGPoint(x: 109.81, y: 45.04))
        aOMORIPath.addLine(to: CGPoint(x: 114.42, y: 40.31))
        aOMORIPath.addCurve(to: CGPoint(x: 112.6, y: 50.19), controlPoint1: CGPoint(x: 114.42, y: 40.31), controlPoint2: CGPoint(x: 111.81, y: 47.28))
        aOMORIPath.addCurve(to: CGPoint(x: 115.63, y: 69.35), controlPoint1: CGPoint(x: 112.6, y: 50.19), controlPoint2: CGPoint(x: 111.81, y: 63.41))
        aOMORIPath.addCurve(to: CGPoint(x: 117.76, y: 69.9), controlPoint1: CGPoint(x: 115.63, y: 69.35), controlPoint2: CGPoint(x: 116.24, y: 70.93))
        aOMORIPath.addLine(to: CGPoint(x: 120.85, y: 73.11))
        aOMORIPath.addLine(to: CGPoint(x: 120.06, y: 73.84))
        aOMORIPath.addLine(to: CGPoint(x: 118.24, y: 74.5))
        aOMORIPath.addLine(to: CGPoint(x: 118.06, y: 75.53))
        aOMORIPath.addLine(to: CGPoint(x: 116.6, y: 76.63))
        aOMORIPath.addLine(to: CGPoint(x: 114.18, y: 75.59))
        aOMORIPath.addLine(to: CGPoint(x: 111.63, y: 77.23))
        aOMORIPath.addLine(to: CGPoint(x: 110.48, y: 75.84))
        aOMORIPath.addLine(to: CGPoint(x: 107.57, y: 77.78))
        aOMORIPath.addLine(to: CGPoint(x: 104.42, y: 79.05))
        aOMORIPath.addLine(to: CGPoint(x: 104.6, y: 79.72))
        aOMORIPath.addLine(to: CGPoint(x: 101.75, y: 81.29))
        aOMORIPath.addLine(to: CGPoint(x: 100.71, y: 80.9))
        aOMORIPath.addLine(to: CGPoint(x: 99.99, y: 80.14))
        aOMORIPath.addLine(to: CGPoint(x: 100.48, y: 76.69))
        aOMORIPath.addLine(to: CGPoint(x: 101.27, y: 76.56))
        aOMORIPath.addLine(to: CGPoint(x: 101.02, y: 73.84))
        aOMORIPath.addLine(to: CGPoint(x: 98.22, y: 73.95))
        aOMORIPath.addLine(to: CGPoint(x: 98.08, y: 73.38))
        aOMORIPath.addLine(to: CGPoint(x: 98.16, y: 73.08))
        aOMORIPath.addLine(to: CGPoint(x: 98.61, y: 73.74))
        aOMORIPath.addLine(to: CGPoint(x: 99.01, y: 73.55))
        aOMORIPath.addLine(to: CGPoint(x: 98.75, y: 72.89))
        aOMORIPath.addLine(to: CGPoint(x: 98.95, y: 72.57))
        aOMORIPath.addLine(to: CGPoint(x: 99.58, y: 73.12))
        aOMORIPath.addLine(to: CGPoint(x: 99.86, y: 72.27))
        aOMORIPath.addLine(to: CGPoint(x: 99.05, y: 71.32))
        aOMORIPath.addLine(to: CGPoint(x: 98.03, y: 71.43))
        aOMORIPath.addLine(to: CGPoint(x: 97.96, y: 70.9))
        aOMORIPath.addLine(to: CGPoint(x: 96.97, y: 71.06))
        aOMORIPath.addLine(to: CGPoint(x: 96.05, y: 71.78))
        aOMORIPath.addLine(to: CGPoint(x: 95.69, y: 73.05))
        aOMORIPath.addLine(to: CGPoint(x: 91.02, y: 74.14))
        aOMORIPath.addLine(to: CGPoint(x: 88.47, y: 73.9))
        aOMORIPath.addLine(to: CGPoint(x: 85.32, y: 72.08))
        aOMORIPath.addLine(to: CGPoint(x: 83.14, y: 72.08))
        aOMORIPath.addLine(to: CGPoint(x: 82.66, y: 73.41))
        aOMORIPath.addLine(to: CGPoint(x: 76.05, y: 73.53))
        aOMORIPath.addLine(to: CGPoint(x: 75.56, y: 72.5))
        aOMORIPath.addLine(to: CGPoint(x: 73.68, y: 72.87))
        aOMORIPath.addLine(to: CGPoint(x: 73.44, y: 74.08))
        aOMORIPath.addLine(to: CGPoint(x: 71.38, y: 73.78))
        aOMORIPath.addLine(to: CGPoint(x: 71.44, y: 71.59))
        aOMORIPath.close()
        strokeColor.setStroke()
        aOMORIPath.lineWidth = 0.5
        aOMORIPath.miterLimit = 4
        aOMORIPath.stroke()
        
        context.restoreGState()
    }
    
    @objc(TohokuResizingBehavior)
    public enum ResizingBehavior: Int {
        case aspectFit /// The content is proportionally resized to fit into the target rectangle.
        case aspectFill /// The content is proportionally resized to completely fill the target rectangle.
        case stretch /// The content is stretched to match the entire target rectangle.
        case center /// The content is centered in the target rectangle, but it is NOT resized.
        
        public func apply(rect: CGRect, target: CGRect) -> CGRect {
            if rect == target || target == CGRect.zero {
                return rect
            }
            
            var scales = CGSize.zero
            scales.width = abs(target.width / rect.width)
            scales.height = abs(target.height / rect.height)
            
            switch self {
            case .aspectFit:
                scales.width = min(scales.width, scales.height)
                scales.height = scales.width
            case .aspectFill:
                scales.width = max(scales.width, scales.height)
                scales.height = scales.width
            case .stretch:
                break
            case .center:
                scales.width = 1
                scales.height = 1
            }
            
            var result = rect.standardized
            result.size.width *= scales.width
            result.size.height *= scales.height
            result.origin.x = target.minX + (target.width - result.width) / 2
            result.origin.y = target.minY + (target.height - result.height) / 2
            return result
        }
    }
}
