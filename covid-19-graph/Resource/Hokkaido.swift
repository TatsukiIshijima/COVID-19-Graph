//
//  Kokkaido.swift
//  ProjectName
//
//  Created by AuthorName on 2020/08/07.
//  Copyright Â© 2020 CompanyName. All rights reserved.
//
//  Generated by PaintCode
//  http://www.paintcodeapp.com
//
//  This code was generated by Trial version of PaintCode, therefore cannot be used for commercial purposes.
//

import UIKit

public class Hokkaido: NSObject {
    //// Drawing Methods
    
    @objc public dynamic class func drawCanvas1(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 230, height: 210), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 230, height: 210), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 230, y: resizedFrame.height / 210)
        
        //// Color Declarations
        let strokeColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000)
        
        //// A Blank Map of Japan Group
        //// HOKKAIDO Drawing
        let hOKKAIDOPath = UIBezierPath()
        hOKKAIDOPath.move(to: CGPoint(x: 182.14, y: 102.26))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 183.79, y: 108.46), controlPoint1: CGPoint(x: 182.58, y: 104.03), controlPoint2: CGPoint(x: 182.58, y: 106.82))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 188.65, y: 112.52), controlPoint1: CGPoint(x: 183.68, y: 108.59), controlPoint2: CGPoint(x: 185.34, y: 111.76))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 193.07, y: 107.83), controlPoint1: CGPoint(x: 188.76, y: 112.52), controlPoint2: CGPoint(x: 193.07, y: 107.83))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 197.08, y: 108.18), controlPoint1: CGPoint(x: 194.92, y: 108.87), controlPoint2: CGPoint(x: 196.97, y: 108.18))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 192.41, y: 110.49), controlPoint1: CGPoint(x: 197.19, y: 108.18), controlPoint2: CGPoint(x: 197.13, y: 110.36))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 191.52, y: 111.76), controlPoint1: CGPoint(x: 192.41, y: 110.74), controlPoint2: CGPoint(x: 191.52, y: 111.76))
        hOKKAIDOPath.addLine(to: CGPoint(x: 190.75, y: 111.88))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 189.81, y: 115.83), controlPoint1: CGPoint(x: 190.75, y: 111.88), controlPoint2: CGPoint(x: 190.07, y: 114.98))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 181.27, y: 117.41), controlPoint1: CGPoint(x: 187.6, y: 115.73), controlPoint2: CGPoint(x: 186.46, y: 115.01))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 178.41, y: 120.59), controlPoint1: CGPoint(x: 181.38, y: 117.41), controlPoint2: CGPoint(x: 179.24, y: 115.53))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 176.95, y: 121.38), controlPoint1: CGPoint(x: 178.86, y: 120.47), controlPoint2: CGPoint(x: 176.95, y: 121.38))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 176.08, y: 122.78), controlPoint1: CGPoint(x: 176.95, y: 121.38), controlPoint2: CGPoint(x: 176.81, y: 122.41))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 171.98, y: 120.62), controlPoint1: CGPoint(x: 174.59, y: 123.52), controlPoint2: CGPoint(x: 171.94, y: 123.52))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 168.99, y: 123.15), controlPoint1: CGPoint(x: 171.86, y: 120.75), controlPoint2: CGPoint(x: 169.66, y: 119.86))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 170.54, y: 124.67), controlPoint1: CGPoint(x: 168.99, y: 123.28), controlPoint2: CGPoint(x: 170.54, y: 124.67))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 163.47, y: 124.17), controlPoint1: CGPoint(x: 170.49, y: 125.11), controlPoint2: CGPoint(x: 163.47, y: 124.04))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 159.05, y: 122.52), controlPoint1: CGPoint(x: 163.6, y: 124.67), controlPoint2: CGPoint(x: 161.59, y: 124.8))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 140.72, y: 134.68), controlPoint1: CGPoint(x: 150.44, y: 122.65), controlPoint2: CGPoint(x: 144.7, y: 130.24))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 132.08, y: 150.17), controlPoint1: CGPoint(x: 136.74, y: 139.11), controlPoint2: CGPoint(x: 132.74, y: 146.24))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 132.98, y: 151.95), controlPoint1: CGPoint(x: 132.13, y: 150.24), controlPoint2: CGPoint(x: 132.98, y: 151.95))
        hOKKAIDOPath.addLine(to: CGPoint(x: 132.22, y: 156.96))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 130.56, y: 161.65), controlPoint1: CGPoint(x: 132.22, y: 156.96), controlPoint2: CGPoint(x: 130.78, y: 158.61))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 128.35, y: 159.75), controlPoint1: CGPoint(x: 130.56, y: 161.78), controlPoint2: CGPoint(x: 128.35, y: 159.75))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 127.69, y: 158.48), controlPoint1: CGPoint(x: 128.35, y: 159.75), controlPoint2: CGPoint(x: 127.69, y: 158.61))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 122.5, y: 154.56), controlPoint1: CGPoint(x: 127.69, y: 158.36), controlPoint2: CGPoint(x: 122.61, y: 154.56))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 117.42, y: 152.4), controlPoint1: CGPoint(x: 122.39, y: 154.56), controlPoint2: CGPoint(x: 119.96, y: 154.68))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 115.65, y: 151.65), controlPoint1: CGPoint(x: 117.64, y: 152.4), controlPoint2: CGPoint(x: 115.65, y: 151.65))
        hOKKAIDOPath.addLine(to: CGPoint(x: 110.79, y: 149.24))
        hOKKAIDOPath.addLine(to: CGPoint(x: 109.47, y: 147.85))
        hOKKAIDOPath.addLine(to: CGPoint(x: 108.69, y: 147.85))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 103.17, y: 142.65), controlPoint1: CGPoint(x: 108.69, y: 147.85), controlPoint2: CGPoint(x: 104.5, y: 145.06))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 99.08, y: 141.26), controlPoint1: CGPoint(x: 102.29, y: 141.77), controlPoint2: CGPoint(x: 99.97, y: 142.02))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 87.27, y: 136.32), controlPoint1: CGPoint(x: 98.2, y: 140.5), controlPoint2: CGPoint(x: 95.33, y: 135.69))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 77.66, y: 142.53), controlPoint1: CGPoint(x: 81.52, y: 138.48), controlPoint2: CGPoint(x: 79.8, y: 140.84))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 72.69, y: 147.59), controlPoint1: CGPoint(x: 78.1, y: 142.53), controlPoint2: CGPoint(x: 75.01, y: 143.16))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 71.47, y: 147.72), controlPoint1: CGPoint(x: 72.68, y: 148.64), controlPoint2: CGPoint(x: 71.47, y: 147.72))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 70.59, y: 146.71), controlPoint1: CGPoint(x: 71.47, y: 147.72), controlPoint2: CGPoint(x: 70.74, y: 147.01))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 70.02, y: 145.76), controlPoint1: CGPoint(x: 70.38, y: 146.04), controlPoint2: CGPoint(x: 70.02, y: 145.76))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 68.27, y: 141.9), controlPoint1: CGPoint(x: 70.02, y: 145.76), controlPoint2: CGPoint(x: 69.38, y: 141.64))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 66.72, y: 140.63), controlPoint1: CGPoint(x: 68.71, y: 142.15), controlPoint2: CGPoint(x: 66.72, y: 140.63))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 61.53, y: 138.35), controlPoint1: CGPoint(x: 66.72, y: 140.63), controlPoint2: CGPoint(x: 66.28, y: 136.07))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 58.44, y: 137.59), controlPoint1: CGPoint(x: 61.53, y: 138.48), controlPoint2: CGPoint(x: 59.99, y: 136.96))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 53.69, y: 150), controlPoint1: CGPoint(x: 58.66, y: 137.72), controlPoint2: CGPoint(x: 53.47, y: 141.52))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 56.45, y: 150.51), controlPoint1: CGPoint(x: 53.91, y: 150.76), controlPoint2: CGPoint(x: 55.02, y: 151.01))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 60.87, y: 155.19), controlPoint1: CGPoint(x: 56.45, y: 150.89), controlPoint2: CGPoint(x: 60.87, y: 155.19))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 65.18, y: 154.18), controlPoint1: CGPoint(x: 60.87, y: 155.19), controlPoint2: CGPoint(x: 65.07, y: 154.05))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 65.95, y: 154.81), controlPoint1: CGPoint(x: 65.29, y: 154.3), controlPoint2: CGPoint(x: 65.95, y: 154.81))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 67.28, y: 156.33), controlPoint1: CGPoint(x: 65.95, y: 154.81), controlPoint2: CGPoint(x: 67.39, y: 156.33))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 69.6, y: 159.5), controlPoint1: CGPoint(x: 67.17, y: 156.33), controlPoint2: CGPoint(x: 67.5, y: 158.48))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 74.01, y: 163.17), controlPoint1: CGPoint(x: 69.38, y: 159.62), controlPoint2: CGPoint(x: 72.14, y: 164.05))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 76.22, y: 164.56), controlPoint1: CGPoint(x: 73.9, y: 163.42), controlPoint2: CGPoint(x: 76.11, y: 164.56))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 76.44, y: 165.45), controlPoint1: CGPoint(x: 76.33, y: 164.56), controlPoint2: CGPoint(x: 76.56, y: 165.45))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 77.22, y: 166.46), controlPoint1: CGPoint(x: 76.33, y: 165.45), controlPoint2: CGPoint(x: 77.11, y: 166.46))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 75.01, y: 167.09), controlPoint1: CGPoint(x: 77.33, y: 166.46), controlPoint2: CGPoint(x: 76.11, y: 167.09))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 71.59, y: 169.75), controlPoint1: CGPoint(x: 75.12, y: 167.35), controlPoint2: CGPoint(x: 74.68, y: 169.5))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 68.16, y: 167.99), controlPoint1: CGPoint(x: 71.69, y: 170.01), controlPoint2: CGPoint(x: 69.15, y: 167.61))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 66.1, y: 167.5), controlPoint1: CGPoint(x: 67.77, y: 168.14), controlPoint2: CGPoint(x: 66.28, y: 167.47))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 64.66, y: 168.89), controlPoint1: CGPoint(x: 65.82, y: 167.56), controlPoint2: CGPoint(x: 64.44, y: 169.21))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 62.22, y: 168.11), controlPoint1: CGPoint(x: 66.17, y: 165.82), controlPoint2: CGPoint(x: 62.37, y: 164.15))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 60.32, y: 170.01), controlPoint1: CGPoint(x: 61.51, y: 169.27), controlPoint2: CGPoint(x: 60.32, y: 170.01))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 57.56, y: 172.92), controlPoint1: CGPoint(x: 60.32, y: 170.01), controlPoint2: CGPoint(x: 57.01, y: 169.88))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 57.56, y: 176.47), controlPoint1: CGPoint(x: 57.56, y: 173.3), controlPoint2: CGPoint(x: 57.56, y: 176.47))
        hOKKAIDOPath.addLine(to: CGPoint(x: 56.31, y: 177.11))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 51.59, y: 181.4), controlPoint1: CGPoint(x: 56.31, y: 177.12), controlPoint2: CGPoint(x: 53.01, y: 177.61))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 48.61, y: 180.52), controlPoint1: CGPoint(x: 51.71, y: 181.4), controlPoint2: CGPoint(x: 49.94, y: 179.63))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 48.17, y: 167.85), controlPoint1: CGPoint(x: 49.11, y: 180.89), controlPoint2: CGPoint(x: 43.07, y: 176.23))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 48.39, y: 166.33), controlPoint1: CGPoint(x: 48.28, y: 167.6), controlPoint2: CGPoint(x: 48.39, y: 166.33))
        hOKKAIDOPath.addLine(to: CGPoint(x: 49.16, y: 166.33))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 46.85, y: 155.06), controlPoint1: CGPoint(x: 49.43, y: 166.28), controlPoint2: CGPoint(x: 51.71, y: 159.35))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 44.19, y: 154.18), controlPoint1: CGPoint(x: 46.96, y: 155.32), controlPoint2: CGPoint(x: 44.19, y: 154.18))
        hOKKAIDOPath.addLine(to: CGPoint(x: 42.87, y: 151.27))
        hOKKAIDOPath.addLine(to: CGPoint(x: 41.54, y: 150.89))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 40.55, y: 150), controlPoint1: CGPoint(x: 41.54, y: 150.89), controlPoint2: CGPoint(x: 40.44, y: 150.13))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 40.66, y: 148.48), controlPoint1: CGPoint(x: 40.66, y: 149.87), controlPoint2: CGPoint(x: 40.66, y: 148.48))
        hOKKAIDOPath.addLine(to: CGPoint(x: 40.33, y: 147.47))
        hOKKAIDOPath.addLine(to: CGPoint(x: 40.83, y: 146.28))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 41.88, y: 136.7), controlPoint1: CGPoint(x: 40.74, y: 146.03), controlPoint2: CGPoint(x: 43.51, y: 146.27))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 46.51, y: 133.79), controlPoint1: CGPoint(x: 42.08, y: 137.15), controlPoint2: CGPoint(x: 41.74, y: 133.82))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 48.41, y: 132.44), controlPoint1: CGPoint(x: 48.04, y: 133.78), controlPoint2: CGPoint(x: 47.95, y: 133.55))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 50.05, y: 131.26), controlPoint1: CGPoint(x: 49.09, y: 132.34), controlPoint2: CGPoint(x: 50.05, y: 131.26))
        hOKKAIDOPath.addLine(to: CGPoint(x: 51.26, y: 128.85))
        hOKKAIDOPath.addLine(to: CGPoint(x: 52.52, y: 130.01))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 54.29, y: 129.13), controlPoint1: CGPoint(x: 52.28, y: 131.57), controlPoint2: CGPoint(x: 54.96, y: 131.32))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 56.12, y: 126.57), controlPoint1: CGPoint(x: 54.29, y: 129.13), controlPoint2: CGPoint(x: 56.12, y: 126.7))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 56.34, y: 125.56), controlPoint1: CGPoint(x: 56.12, y: 126.44), controlPoint2: CGPoint(x: 56.34, y: 125.56))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 59.88, y: 122.77), controlPoint1: CGPoint(x: 56.37, y: 125.62), controlPoint2: CGPoint(x: 57.27, y: 124.64))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 60.1, y: 121.63), controlPoint1: CGPoint(x: 59.66, y: 122.77), controlPoint2: CGPoint(x: 60.1, y: 121.63))
        hOKKAIDOPath.addLine(to: CGPoint(x: 57.23, y: 116.95))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 55.36, y: 112.5), controlPoint1: CGPoint(x: 57.23, y: 116.95), controlPoint2: CGPoint(x: 53.82, y: 114.96))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 55.7, y: 110.26), controlPoint1: CGPoint(x: 55.45, y: 111.98), controlPoint2: CGPoint(x: 55.47, y: 110.88))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 57.77, y: 110.02), controlPoint1: CGPoint(x: 55.82, y: 110.26), controlPoint2: CGPoint(x: 56.85, y: 110.53))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 59.33, y: 108.34), controlPoint1: CGPoint(x: 58.6, y: 109.56), controlPoint2: CGPoint(x: 58.32, y: 108.48))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 62.53, y: 111.5), controlPoint1: CGPoint(x: 59.33, y: 108.34), controlPoint2: CGPoint(x: 61.37, y: 111.4))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 66.5, y: 114.04), controlPoint1: CGPoint(x: 62.52, y: 111.52), controlPoint2: CGPoint(x: 64.64, y: 114.04))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 68.6, y: 114.67), controlPoint1: CGPoint(x: 66.62, y: 114.16), controlPoint2: CGPoint(x: 66.5, y: 116.57))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 72.8, y: 113.78), controlPoint1: CGPoint(x: 69.09, y: 115.41), controlPoint2: CGPoint(x: 71.25, y: 113.64))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 73.24, y: 115.56), controlPoint1: CGPoint(x: 72.8, y: 113.91), controlPoint2: CGPoint(x: 72.14, y: 115.18))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 76.44, y: 117.07), controlPoint1: CGPoint(x: 73.24, y: 115.68), controlPoint2: CGPoint(x: 76.44, y: 117.07))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 83.62, y: 107.7), controlPoint1: CGPoint(x: 76.44, y: 117.17), controlPoint2: CGPoint(x: 82.8, y: 114.97))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 81.63, y: 103.27), controlPoint1: CGPoint(x: 83.73, y: 108.08), controlPoint2: CGPoint(x: 81.63, y: 103.27))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 81.75, y: 99.47), controlPoint1: CGPoint(x: 81.63, y: 103.27), controlPoint2: CGPoint(x: 82.96, y: 101.25))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 81.3, y: 97.95), controlPoint1: CGPoint(x: 81.52, y: 98.77), controlPoint2: CGPoint(x: 81.44, y: 98.1))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 85.72, y: 91.24), controlPoint1: CGPoint(x: 81.3, y: 97.95), controlPoint2: CGPoint(x: 79.76, y: 92.89))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 89.59, y: 84.28), controlPoint1: CGPoint(x: 85.72, y: 91.24), controlPoint2: CGPoint(x: 89.03, y: 90.73))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 89.15, y: 74.15), controlPoint1: CGPoint(x: 89.92, y: 84.66), controlPoint2: CGPoint(x: 89.15, y: 74.15))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 92.24, y: 65.28), controlPoint1: CGPoint(x: 89.15, y: 74.15), controlPoint2: CGPoint(x: 93.01, y: 69.46))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 86.94, y: 41.86), controlPoint1: CGPoint(x: 92.46, y: 65.79), controlPoint2: CGPoint(x: 94.67, y: 57.43))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 86.94, y: 40.21), controlPoint1: CGPoint(x: 87.27, y: 41.73), controlPoint2: CGPoint(x: 86.94, y: 40.21))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 88.15, y: 37.17), controlPoint1: CGPoint(x: 86.94, y: 40.21), controlPoint2: CGPoint(x: 88.26, y: 39.96))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 89.48, y: 35.27), controlPoint1: CGPoint(x: 88.15, y: 37.68), controlPoint2: CGPoint(x: 89.48, y: 35.27))
        hOKKAIDOPath.addLine(to: CGPoint(x: 89.03, y: 34.64))
        hOKKAIDOPath.addLine(to: CGPoint(x: 88.7, y: 33.37))
        hOKKAIDOPath.addLine(to: CGPoint(x: 89.15, y: 32.49))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 91.68, y: 33.88), controlPoint1: CGPoint(x: 89.15, y: 32.49), controlPoint2: CGPoint(x: 90.14, y: 34.38))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 95.22, y: 30.08), controlPoint1: CGPoint(x: 91.68, y: 34), controlPoint2: CGPoint(x: 94.89, y: 34.89))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 96.87, y: 29.7), controlPoint1: CGPoint(x: 95.44, y: 29.95), controlPoint2: CGPoint(x: 96.87, y: 29.7))
        hOKKAIDOPath.addLine(to: CGPoint(x: 97.76, y: 31.6))
        hOKKAIDOPath.addLine(to: CGPoint(x: 99.31, y: 33.75))
        hOKKAIDOPath.addLine(to: CGPoint(x: 102.95, y: 36.54))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 111.12, y: 46.92), controlPoint1: CGPoint(x: 102.95, y: 36.54), controlPoint2: CGPoint(x: 108.8, y: 44.89))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 119.52, y: 60.22), controlPoint1: CGPoint(x: 113.44, y: 48.95), controlPoint2: CGPoint(x: 112.45, y: 53))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 133.32, y: 72.12), controlPoint1: CGPoint(x: 126.58, y: 67.44), controlPoint2: CGPoint(x: 129.12, y: 69.71))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 155.52, y: 81.74), controlPoint1: CGPoint(x: 133.54, y: 72.25), controlPoint2: CGPoint(x: 133.76, y: 77.19))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 156.8, y: 81.85), controlPoint1: CGPoint(x: 155.63, y: 82), controlPoint2: CGPoint(x: 156.8, y: 81.85))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 157.95, y: 86.3), controlPoint1: CGPoint(x: 156.97, y: 84.09), controlPoint2: CGPoint(x: 156.76, y: 84.93))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 170.27, y: 88.51), controlPoint1: CGPoint(x: 157.95, y: 86.3), controlPoint2: CGPoint(x: 162.1, y: 89.78))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 180.37, y: 78.85), controlPoint1: CGPoint(x: 171.6, y: 87.57), controlPoint2: CGPoint(x: 179.8, y: 79.07))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 181.92, y: 76.3), controlPoint1: CGPoint(x: 180.37, y: 78.98), controlPoint2: CGPoint(x: 181.97, y: 77.53))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 184.57, y: 72.88), controlPoint1: CGPoint(x: 183.18, y: 75.65), controlPoint2: CGPoint(x: 183.79, y: 74.45))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 185.56, y: 75.79), controlPoint1: CGPoint(x: 185.08, y: 73.21), controlPoint2: CGPoint(x: 185.6, y: 75.8))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 182.69, y: 80.98), controlPoint1: CGPoint(x: 185.39, y: 76.09), controlPoint2: CGPoint(x: 185.12, y: 78.96))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 182.25, y: 83.39), controlPoint1: CGPoint(x: 182.8, y: 81.24), controlPoint2: CGPoint(x: 182.25, y: 83.26))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 178.49, y: 90.23), controlPoint1: CGPoint(x: 182.25, y: 83.52), controlPoint2: CGPoint(x: 178.93, y: 87.19))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 178.49, y: 91.37), controlPoint1: CGPoint(x: 178.6, y: 90.48), controlPoint2: CGPoint(x: 178.49, y: 91.37))
        hOKKAIDOPath.addLine(to: CGPoint(x: 177.61, y: 93.14))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 179.82, y: 98.46), controlPoint1: CGPoint(x: 177.61, y: 93.14), controlPoint2: CGPoint(x: 178.05, y: 95.8))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 181.19, y: 99.53), controlPoint1: CGPoint(x: 179.71, y: 98.59), controlPoint2: CGPoint(x: 181.19, y: 99.53))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 184.92, y: 100.82), controlPoint1: CGPoint(x: 181.19, y: 99.53), controlPoint2: CGPoint(x: 184.03, y: 100.14))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 184.89, y: 102.18), controlPoint1: CGPoint(x: 184.92, y: 100.82), controlPoint2: CGPoint(x: 185.71, y: 101.68))
        hOKKAIDOPath.addLine(to: CGPoint(x: 183.57, y: 102.1))
        hOKKAIDOPath.addLine(to: CGPoint(x: 184.34, y: 101.54))
        hOKKAIDOPath.addLine(to: CGPoint(x: 184.32, y: 100.85))
        hOKKAIDOPath.addLine(to: CGPoint(x: 182.44, y: 100.66))
        hOKKAIDOPath.addLine(to: CGPoint(x: 182.85, y: 100.27))
        hOKKAIDOPath.addLine(to: CGPoint(x: 181.36, y: 99.8))
        hOKKAIDOPath.addLine(to: CGPoint(x: 181.21, y: 100.49))
        hOKKAIDOPath.addLine(to: CGPoint(x: 181.81, y: 100.93))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 182.14, y: 102.26), controlPoint1: CGPoint(x: 181.81, y: 100.93), controlPoint2: CGPoint(x: 181.69, y: 100.49))
        hOKKAIDOPath.close()
        hOKKAIDOPath.move(to: CGPoint(x: 149.5, y: 81.08))
        hOKKAIDOPath.addLine(to: CGPoint(x: 141.3, y: 78.33))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 145.77, y: 81.55), controlPoint1: CGPoint(x: 141.3, y: 78.33), controlPoint2: CGPoint(x: 144.2, y: 83.36))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 148.51, y: 82.5), controlPoint1: CGPoint(x: 145.94, y: 82.03), controlPoint2: CGPoint(x: 148.51, y: 82.5))
        hOKKAIDOPath.addLine(to: CGPoint(x: 149.5, y: 81.08))
        hOKKAIDOPath.close()
        hOKKAIDOPath.move(to: CGPoint(x: 81.17, y: 129.52))
        hOKKAIDOPath.addLine(to: CGPoint(x: 80.25, y: 130.94))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 79.18, y: 130.66), controlPoint1: CGPoint(x: 80.25, y: 130.94), controlPoint2: CGPoint(x: 79.18, y: 130.56))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 79.34, y: 132.84), controlPoint1: CGPoint(x: 79.18, y: 130.75), controlPoint2: CGPoint(x: 79.34, y: 132.84))
        hOKKAIDOPath.addLine(to: CGPoint(x: 80.01, y: 133.13))
        hOKKAIDOPath.addLine(to: CGPoint(x: 81.25, y: 131.8))
        hOKKAIDOPath.addLine(to: CGPoint(x: 82.82, y: 131.89))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 81.17, y: 129.52), controlPoint1: CGPoint(x: 83.62, y: 131.44), controlPoint2: CGPoint(x: 81.79, y: 129.16))
        hOKKAIDOPath.close()
        hOKKAIDOPath.move(to: CGPoint(x: 68.48, y: 135.58))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 67, y: 137.49), controlPoint1: CGPoint(x: 68.48, y: 135.58), controlPoint2: CGPoint(x: 66.92, y: 136.64))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 68.91, y: 138.63), controlPoint1: CGPoint(x: 67.87, y: 138.89), controlPoint2: CGPoint(x: 68.74, y: 138.63))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 70.48, y: 136.64), controlPoint1: CGPoint(x: 69.07, y: 138.63), controlPoint2: CGPoint(x: 70.31, y: 138.25))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 68.48, y: 135.58), controlPoint1: CGPoint(x: 69.21, y: 135.25), controlPoint2: CGPoint(x: 68.48, y: 135.58))
        hOKKAIDOPath.close()
        hOKKAIDOPath.move(to: CGPoint(x: 68.66, y: 136.74))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 69.06, y: 137.19), controlPoint1: CGPoint(x: 68.66, y: 136.74), controlPoint2: CGPoint(x: 69.02, y: 136.6))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 68.64, y: 137.67), controlPoint1: CGPoint(x: 69.1, y: 137.78), controlPoint2: CGPoint(x: 69.08, y: 137.53))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 68.27, y: 137.17), controlPoint1: CGPoint(x: 68.21, y: 137.8), controlPoint2: CGPoint(x: 68.33, y: 137.69))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 68.66, y: 136.74), controlPoint1: CGPoint(x: 68.21, y: 136.65), controlPoint2: CGPoint(x: 68.66, y: 136.74))
        hOKKAIDOPath.close()
        hOKKAIDOPath.move(to: CGPoint(x: 77.6, y: 39.39))
        hOKKAIDOPath.addLine(to: CGPoint(x: 79.51, y: 40.24))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 80.83, y: 43.47), controlPoint1: CGPoint(x: 79.51, y: 40.24), controlPoint2: CGPoint(x: 81.17, y: 42.24))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 78.18, y: 44.99), controlPoint1: CGPoint(x: 80.5, y: 44.7), controlPoint2: CGPoint(x: 78.18, y: 44.89))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 75.78, y: 42.14), controlPoint1: CGPoint(x: 78.18, y: 45.08), controlPoint2: CGPoint(x: 76.11, y: 43.85))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 77.6, y: 39.39), controlPoint1: CGPoint(x: 75.45, y: 40.43), controlPoint2: CGPoint(x: 77.6, y: 39.39))
        hOKKAIDOPath.close()
        hOKKAIDOPath.move(to: CGPoint(x: 73.79, y: 32.64))
        hOKKAIDOPath.addLine(to: CGPoint(x: 73.79, y: 37.39))
        hOKKAIDOPath.addLine(to: CGPoint(x: 73.3, y: 38.72))
        hOKKAIDOPath.addLine(to: CGPoint(x: 72.8, y: 38.34))
        hOKKAIDOPath.addLine(to: CGPoint(x: 72.88, y: 37.11))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 72.05, y: 33.21), controlPoint1: CGPoint(x: 72.88, y: 37.11), controlPoint2: CGPoint(x: 71.81, y: 35.11))
        hOKKAIDOPath.addCurve(to: CGPoint(x: 73.79, y: 32.64), controlPoint1: CGPoint(x: 72.14, y: 33.31), controlPoint2: CGPoint(x: 73.79, y: 32.64))
        hOKKAIDOPath.close()
        strokeColor.setStroke()
        hOKKAIDOPath.lineWidth = 0.5
        hOKKAIDOPath.miterLimit = 4
        hOKKAIDOPath.stroke()
        
        context.restoreGState()
    }
    
    @objc(KokkaidoResizingBehavior)
    public enum ResizingBehavior: Int {
        case aspectFit /// The content is proportionally resized to fit into the target rectangle.
        case aspectFill /// The content is proportionally resized to completely fill the target rectangle.
        case stretch /// The content is stretched to match the entire target rectangle.
        case center /// The content is centered in the target rectangle, but it is NOT resized.
        
        public func apply(rect: CGRect, target: CGRect) -> CGRect {
            if rect == target || target == CGRect.zero {
                return rect
            }
            
            var scales = CGSize.zero
            scales.width = abs(target.width / rect.width)
            scales.height = abs(target.height / rect.height)
            
            switch self {
            case .aspectFit:
                scales.width = min(scales.width, scales.height)
                scales.height = scales.width
            case .aspectFill:
                scales.width = max(scales.width, scales.height)
                scales.height = scales.width
            case .stretch:
                break
            case .center:
                scales.width = 1
                scales.height = 1
            }
            
            var result = rect.standardized
            result.size.width *= scales.width
            result.size.height *= scales.height
            result.origin.x = target.minX + (target.width - result.width) / 2
            result.origin.y = target.minY + (target.height - result.height) / 2
            return result
        }
    }
}
